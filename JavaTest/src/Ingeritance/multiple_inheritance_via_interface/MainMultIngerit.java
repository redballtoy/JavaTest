package Ingeritance.multiple_inheritance_via_interface;

/*
 * Здесь описываются два "варианта" множественного наследования:
 *   1. это использование в двух интерфейсах дефолтных методов с одинаковой сигнатурой,
 *       что требует для ликвидации конфликта переопреления этого конфликтного метода
 *   2. это наследование внутреннего класса, что позволяет расширять функциональность
 *       внутренних и основных классов
 *
 * */

public class MainMultIngerit {
    public static void main(String[] args) {


        //1. Возможна ситуация когда в двух разных интерфейсах есть дефолтные методы с одинаковой
        //сигнатурой. При применении этих методов к объекту может возникнуть конфликт

        Duck duck = new Duck();
        duck.showInfo();

        //2. Создаем во внутреннем классе B который содержится в A наследование от класса С




    }
}
